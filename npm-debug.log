0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.0.0
3 info using node@v0.10.28
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add spec="." args=[".",null]
7 verbose parsed spec { raw: '.',
7 verbose parsed spec   scope: null,
7 verbose parsed spec   name: null,
7 verbose parsed spec   rawSpec: '.',
7 verbose parsed spec   spec: '/Users/paul/workspace/grunt-svn-control',
7 verbose parsed spec   type: 'local' }
8 verbose cache add local package /Users/paul/workspace/grunt-svn-control
9 silly lockFile 3a52ce78- .
10 verbose lock . /Users/paul/.npm/3a52ce78-.lock
11 verbose tar pack [ '/Users/paul/.npm/grunt-svn-fetch/0.2.0/package.tgz', '.' ]
12 verbose tarball /Users/paul/.npm/grunt-svn-fetch/0.2.0/package.tgz
13 verbose folder .
14 info prepublish grunt-svn-fetch@0.2.0
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. /Users/paul/.npm/1f1177db-tar.lock
17 silly lockFile 2989e699-runt-svn-fetch-0-2-0-package-tgz tar:///Users/paul/.npm/grunt-svn-fetch/0.2.0/package.tgz
18 verbose lock tar:///Users/paul/.npm/grunt-svn-fetch/0.2.0/package.tgz /Users/paul/.npm/2989e699-runt-svn-fetch-0-2-0-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 2989e699-runt-svn-fetch-0-2-0-package-tgz tar:///Users/paul/.npm/grunt-svn-fetch/0.2.0/package.tgz
22 silly lockFile 2989e699-runt-svn-fetch-0-2-0-package-tgz tar:///Users/paul/.npm/grunt-svn-fetch/0.2.0/package.tgz
23 silly lockFile e7865649-pm-grunt-svn-fetch-0-2-0-package /Users/paul/.npm/grunt-svn-fetch/0.2.0/package
24 verbose lock /Users/paul/.npm/grunt-svn-fetch/0.2.0/package /Users/paul/.npm/e7865649-pm-grunt-svn-fetch-0-2-0-package.lock
25 silly lockFile e7865649-pm-grunt-svn-fetch-0-2-0-package /Users/paul/.npm/grunt-svn-fetch/0.2.0/package
26 silly lockFile e7865649-pm-grunt-svn-fetch-0-2-0-package /Users/paul/.npm/grunt-svn-fetch/0.2.0/package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'grunt-svn-fetch',
29 silly publish   description: 'Ensures specified files are checked out or updated from SVN repository.',
29 silly publish   version: '0.2.0',
29 silly publish   homepage: 'https://github.com/askelkana/svn-fetch',
29 silly publish   author: { name: 'askelkana', email: 'askelkana@gmail.com' },
29 silly publish   repository: { type: 'git', url: 'git://github.com/askelkana/svn-fetch.git' },
29 silly publish   bugs: { url: 'https://github.com/askelkana/svn-fetch/issues' },
29 silly publish   licenses:
29 silly publish    [ { type: 'MIT',
29 silly publish        url: 'https://github.com/askelkana/svn-fetch/blob/master/LICENSE-MIT' } ],
29 silly publish   main: 'Gruntfile.js',
29 silly publish   engines: { node: '>= 0.8.0' },
29 silly publish   scripts: { test: 'grunt test' },
29 silly publish   devDependencies:
29 silly publish    { async: '^0.9.0',
29 silly publish      grunt: '^0.4.5',
29 silly publish      'grunt-contrib-clean': '^0.6.0',
29 silly publish      'grunt-contrib-jshint': '~0.1.1',
29 silly publish      'grunt-contrib-nodeunit': '~0.1.2' },
29 silly publish   peerDependencies: { grunt: '~0.4.0' },
29 silly publish   keywords: [ 'gruntplugin', 'svn' ],
29 silly publish   dependencies: { grunt: '^0.4.5', 'grunt-exec': '^0.4.6' },
29 silly publish   readme: '# grunt-svn-fetch\r\n\r\n> Ensures specified files are checked out or updated from SVN repository.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.0`\r\n\r\nIf you haven\'t used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you\'re familiar with that process, you may install this plugin with this command:\r\n\r\n\tnpm install grunt-svn-fetch --save-dev\r\n\r\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n\tgrunt.loadNpmTasks(\'grunt-svn-fetch\');\r\n\r\n## The "svn_fetch" task\r\n\r\n### Overview\r\nIn your project\'s Gruntfile, add a section named `svn_fetch` to the data object passed into `grunt.initConfig()`.\r\n\r\n\tgrunt.initConfig({\r\n\t\tsvn_fetch: {\r\n\t\t\toptions: {\r\n\t\t\t\t// Task-specific options go here.\r\n\t\t\t},\r\n\t\t\tyour_target: {\r\n\t\t\t\toptions: {\r\n\t\t\t\t\t// Target-specific settings and/or options go here.\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t})\r\n\r\nThe task works by checking for the presence of the ```.svn``` folder under each of the target folders. If present, an update is performed, otherwise a checkout is done.\r\n\r\n### Options\r\n\r\n#### options.bin\r\nType: `String`\r\n\r\nDefault value: `\'svn\'`\r\n\r\nSpecifies the location of the SVN binary.\r\n\r\n#### options.execOptions\r\nType: \'Object\'\r\n\r\nDefault value: `{}`\r\n\r\nSpecifies any options to pass to the `exec` command when executing the svn cli statements. For example, it may be necessary to increase the default `maxBuffer` for larger repositories.\r\n\r\nDefault value: `{}`\r\n\r\nSpecifies any options to pass to the `svn` command. For example you can specify your credentials as follows:\r\n\r\n```js\r\nsvnOptions: {\r\n\tusername: \'paul\',\r\n\tpassword: \'paulpasswd\'\r\n}\r\n```\r\n\r\n#### options.repository\r\nType: `String`\r\n\r\nDefault value: `\'\'`\r\n\r\nThe URL of the SVN repository.\r\n\r\n#### options.path\r\nType: `String`\r\n\r\nDefault value: `\'\'`\r\n\r\nThe base element of the path to where checked out or updated files are placed.\r\n\r\n### Usage Examples\r\n\r\n\tgrunt.initConfig({\r\n\t\tsvn_fetch: {\r\n\t\t\toptions: {\r\n\t\t\t\t\'repository\':\t\'https://my_repos.com/projectX/trunk/\',\r\n\t\t\t\t\'path\': \t\t\'/svn/projectX/src/\'\r\n\t\t\t},\r\n\t\t\tprojectX: {\r\n\t    \t\tmap: {\r\n\t\t\t    \t\'folderX\': \'SVNFolderX\',\r\n\t\t\t\t\t\'folderY\': \'SVNFolderY\'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t    },\r\n\t});\r\n\r\nEach entry in ```map``` utilises the ```path``` and ```respository``` options to determine the full path and URL of the items being considered. So, in this case, the first entry would resolve to:\r\n\r\n\t/svn/projectX/src/folderX\r\n\r\nand\r\n\r\n\thttps://my_repos.com/projectX/trunk/SVNFolderX\r\n\r\nNote the inclusion of slashes on the option entries. The plugin makes no effort to ensure slashes are correct.\r\n\r\n## Release History\r\n* 2013-03-13 0.1.0 Initial release\r\n* 2013-03-13 0.1.2 Issue #1 fixed\r\n* 2013-12-11 0.1.3 Issue #2 fixed\r\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: 'e60a081dcd2d3a6c4d40faa3948bc63db9ad0e5f',
29 silly publish   _id: 'grunt-svn-fetch@0.2.0',
29 silly publish   _shasum: 'ad8a3664889770f4fcc7128df2d06f0a11d0b2d8',
29 silly publish   _from: '.' }
30 verbose mapToRegistry name grunt-svn-fetch
31 verbose mapToRegistry uri https://registry.npmjs.org/grunt-svn-fetch
32 verbose publish registryBase https://registry.npmjs.org/
33 verbose request on initialization, where is /grunt-svn-fetch
34 verbose request after pass 1, where is /grunt-svn-fetch
35 verbose request url raw /grunt-svn-fetch
36 verbose request resolving registry [ 'https://registry.npmjs.org/', './grunt-svn-fetch' ]
37 verbose request after pass 2, where is https://registry.npmjs.org/grunt-svn-fetch
38 verbose request sending authorization for write operation
39 info attempt registry request try #1 at 12:05:58
40 verbose request id 8e4332d60bc494b0
41 http request PUT https://registry.npmjs.org/grunt-svn-fetch
42 http 403 https://registry.npmjs.org/grunt-svn-fetch
43 verbose headers { date: 'Mon, 08 Dec 2014 11:06:05 GMT',
43 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
43 verbose headers   'content-type': 'application/json',
43 verbose headers   'cache-control': 'max-age=60',
43 verbose headers   'content-length': '9390',
43 verbose headers   'accept-ranges': 'bytes',
43 verbose headers   via: '1.1 varnish',
43 verbose headers   'x-served-by': 'cache-fra1223-FRA',
43 verbose headers   'x-cache': 'MISS',
43 verbose headers   'x-cache-hits': '0',
43 verbose headers   'x-timer': 'S1418036764.342341,VS0,VE834',
43 verbose headers   'keep-alive': 'timeout=10, max=50',
43 verbose headers   connection: 'Keep-Alive' }
44 error publish Failed PUT 403
45 verbose stack Error: forbidden user: paulvarache not authorized to modify grunt-svn-fetch
45 verbose stack Changed: dist-tags.latest "0.1.3" -> "0.2.0"
45 verbose stack Added: versions.0.2.0
45 verbose stack Changed: readme "# grunt-svn-fetch\u000d\u000a\u000d\u000a> Ensures specified files are checked out or updated from SVN repository.\u000d\u000a\u000d\u000a## Getting Started\u000d\u000aThis plugin requires Grunt `~0.4.0`\u000d\u000a\u000d\u000aIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\u000d\u000a\u000d\u000a\u0009npm install grunt-svn-fetch --save-dev\u000d\u000a\u000d\u000aOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\u000d\u000a\u000d\u000a\u0009grunt.loadNpmTasks('grunt-svn-fetch');\u000d\u000a\u000d\u000a## The \"svn_fetch\" task\u000d\u000a\u000d\u000a### Overview\u000d\u000aIn your project's Gruntfile, add a section named `svn_fetch` to the data object passed into `grunt.initConfig()`.\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009// Task-specific options go here.\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009your_target: {\u000d\u000a\u0009\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009\u0009// Target-specific settings and/or options go here.\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009},\u000d\u000a\u0009})\u000d\u000a\u000d\u000aThe task works by checking for the presence of the ```.svn``` folder under each of the target folders. If present, an update is performed, otherwise a checkout is done.\u000d\u000a\u000d\u000a### Options\u000d\u000a\u000d\u000a#### options.bin\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `'svn'`\u000d\u000a\u000d\u000aSpecifies the location of the SVN binary.\u000d\u000a\u000d\u000a#### options.execOptions\u000d\u000aType: 'Object'\u000d\u000a\u000d\u000aDefault value: `{}`\u000d\u000a\u000d\u000aSpecifies any options to pass to the `exec` command when executing the svn cli statements. For example, it may be necessary to increase the default `maxBuffer` for larger repositories.\u000d\u000a\u000d\u000a#### options.repository\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe URL of the SVN repository.\u000d\u000a\u000d\u000a#### options.path\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe base element of the path to where checked out or updated files are placed.\u000d\u000a\u000d\u000a### Usage Examples\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009'repository':\u0009'https://my_repos.com/projectX/trunk/',\u000d\u000a\u0009\u0009\u0009\u0009'path': \u0009\u0009'/svn/projectX/src/'\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009projectX: {\u000d\u000a\u0009    \u0009\u0009map: {\u000d\u000a\u0009\u0009\u0009    \u0009'folderX': 'SVNFolderX',\u000d\u000a\u0009\u0009\u0009\u0009\u0009'folderY': 'SVNFolderY'\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009}\u000d\u000a\u0009    },\u000d\u000a\u0009});\u000d\u000a\u000d\u000aEach entry in ```map``` utilises the ```path``` and ```respository``` options to determine the full path and URL of the items being considered. So, in this case, the first entry would resolve to:\u000d\u000a\u000d\u000a\u0009/svn/projectX/src/folderX\u000d\u000a\u000d\u000aand\u000d\u000a\u000d\u000a\u0009https://my_repos.com/projectX/trunk/SVNFolderX\u000d\u000a\u000d\u000aNote the inclusion of slashes on the option entries. The plugin makes no effort to ensure slashes are correct.\u000d\u000a\u000d\u000a## Release History\u000d\u000a* 2013-03-13 0.1.0 Initial release\u000d\u000a* 2013-03-13 0.1.2 Issue #1 fixed\u000d\u000a* 2013-12-11 0.1.3 Issue #2 fixed\u000d\u000a" -> "# grunt-svn-fetch\u000d\u000a\u000d\u000a> Ensures specified files are checked out or updated from SVN repository.\u000d\u000a\u000d\u000a## Getting Started\u000d\u000aThis plugin requires Grunt `~0.4.0`\u000d\u000a\u000d\u000aIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\u000d\u000a\u000d\u000a\u0009npm install grunt-svn-fetch --save-dev\u000d\u000a\u000d\u000aOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\u000d\u000a\u000d\u000a\u0009grunt.loadNpmTasks('grunt-svn-fetch');\u000d\u000a\u000d\u000a## The \"svn_fetch\" task\u000d\u000a\u000d\u000a### Overview\u000d\u000aIn your project's Gruntfile, add a section named `svn_fetch` to the data object passed into `grunt.initConfig()`.\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009// Task-specific options go here.\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009your_target: {\u000d\u000a\u0009\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009\u0009// Target-specific settings and/or options go here.\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009},\u000d\u000a\u0009})\u000d\u000a\u000d\u000aThe task works by checking for the presence of the ```.svn``` folder under each of the target folders. If present, an update is performed, otherwise a checkout is done.\u000d\u000a\u000d\u000a### Options\u000d\u000a\u000d\u000a#### options.bin\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `'svn'`\u000d\u000a\u000d\u000aSpecifies the location of the SVN binary.\u000d\u000a\u000d\u000a#### options.execOptions\u000d\u000aType: 'Object'\u000d\u000a\u000d\u000aDefault value: `{}`\u000d\u000a\u000d\u000aSpecifies any options to pass to the `exec` command when executing the svn cli statements. For example, it may be necessary to increase the default `maxBuffer` for larger repositories.\u000d\u000a\u000d\u000aDefault value: `{}`\u000d\u000a\u000d\u000aSpecifies any options to pass to the `svn` command. For example you can specify your credentials as follows:\u000d\u000a\u000d\u000a```js\u000d\u000asvnOptions: {\u000d\u000a\u0009username: 'paul',\u000d\u000a\u0009password: 'paulpasswd'\u000d\u000a}\u000d\u000a```\u000d\u000a\u000d\u000a#### options.repository\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe URL of the SVN repository.\u000d\u000a\u000d\u000a#### options.path\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe base element of the path to where checked out or updated files are placed.\u000d\u000a\u000d\u000a### Usage Examples\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009'repository':\u0009'https://my_repos.com/projectX/trunk/',\u000d\u000a\u0009\u0009\u0009\u0009'path': \u0009\u0009'/svn/projectX/src/'\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009projectX: {\u000d\u000a\u0009    \u0009\u0009map: {\u000d\u000a\u0009\u0009\u0009    \u0009'folderX': 'SVNFolderX',\u000d\u000a\u0009\u0009\u0009\u0009\u0009'folderY': 'SVNFolderY'\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009}\u000d\u000a\u0009    },\u000d\u000a\u0009});\u000d\u000a\u000d\u000aEach entry in ```map``` utilises the ```path``` and ```respository``` options to determine the full path and URL of the items being considered. So, in this case, the first entry would resolve to:\u000d\u000a\u000d\u000a\u0009/svn/projectX/src/folderX\u000d\u000a\u000d\u000aand\u000d\u000a\u000d\u000a\u0009https://my_repos.com/projectX/trunk/SVNFolderX\u000d\u000a\u000d\u000aNote the inclusion of slashes on the option entries. The plugin makes no effort to ensure slashes are correct.\u000d\u000a\u000d\u000a## Release History\u000d\u000a* 2013-03-13 0.1.0 Initial release\u000d\u000a* 2013-03-13 0.1.2 Issue #1 fixed\u000d\u000a* 2013-12-11 0.1.3 Issue #2 fixed\u000d\u000a"
45 verbose stack Changed: time.modified "2013-12-11T23:05:43.767Z" -> "2014-12-08T11:07:17.136Z"
45 verbose stack Added: time.0.2.0
45 verbose stack Added: _attachments: grunt-svn-fetch
45 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:261:14)
45 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:198:65)
45 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
45 verbose stack     at Request.EventEmitter.emit (events.js:98:17)
45 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
45 verbose stack     at Request.EventEmitter.emit (events.js:117:20)
45 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
45 verbose stack     at IncomingMessage.EventEmitter.emit (events.js:117:20)
45 verbose stack     at _stream_readable.js:919:16
45 verbose stack     at process._tickCallback (node.js:419:13)
46 verbose statusCode 403
47 verbose pkgid grunt-svn-fetch
48 verbose cwd /Users/paul/workspace/grunt-svn-control
49 error Darwin 14.0.0
50 error argv "node" "/usr/local/bin/npm" "publish"
51 error node v0.10.28
52 error npm  v2.0.0
53 error code E403
54 error forbidden user: paulvarache not authorized to modify grunt-svn-fetch
54 error Changed: dist-tags.latest "0.1.3" -> "0.2.0"
54 error Added: versions.0.2.0
54 error Changed: readme "# grunt-svn-fetch\u000d\u000a\u000d\u000a> Ensures specified files are checked out or updated from SVN repository.\u000d\u000a\u000d\u000a## Getting Started\u000d\u000aThis plugin requires Grunt `~0.4.0`\u000d\u000a\u000d\u000aIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\u000d\u000a\u000d\u000a\u0009npm install grunt-svn-fetch --save-dev\u000d\u000a\u000d\u000aOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\u000d\u000a\u000d\u000a\u0009grunt.loadNpmTasks('grunt-svn-fetch');\u000d\u000a\u000d\u000a## The \"svn_fetch\" task\u000d\u000a\u000d\u000a### Overview\u000d\u000aIn your project's Gruntfile, add a section named `svn_fetch` to the data object passed into `grunt.initConfig()`.\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009// Task-specific options go here.\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009your_target: {\u000d\u000a\u0009\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009\u0009// Target-specific settings and/or options go here.\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009},\u000d\u000a\u0009})\u000d\u000a\u000d\u000aThe task works by checking for the presence of the ```.svn``` folder under each of the target folders. If present, an update is performed, otherwise a checkout is done.\u000d\u000a\u000d\u000a### Options\u000d\u000a\u000d\u000a#### options.bin\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `'svn'`\u000d\u000a\u000d\u000aSpecifies the location of the SVN binary.\u000d\u000a\u000d\u000a#### options.execOptions\u000d\u000aType: 'Object'\u000d\u000a\u000d\u000aDefault value: `{}`\u000d\u000a\u000d\u000aSpecifies any options to pass to the `exec` command when executing the svn cli statements. For example, it may be necessary to increase the default `maxBuffer` for larger repositories.\u000d\u000a\u000d\u000a#### options.repository\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe URL of the SVN repository.\u000d\u000a\u000d\u000a#### options.path\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe base element of the path to where checked out or updated files are placed.\u000d\u000a\u000d\u000a### Usage Examples\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009'repository':\u0009'https://my_repos.com/projectX/trunk/',\u000d\u000a\u0009\u0009\u0009\u0009'path': \u0009\u0009'/svn/projectX/src/'\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009projectX: {\u000d\u000a\u0009    \u0009\u0009map: {\u000d\u000a\u0009\u0009\u0009    \u0009'folderX': 'SVNFolderX',\u000d\u000a\u0009\u0009\u0009\u0009\u0009'folderY': 'SVNFolderY'\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009}\u000d\u000a\u0009    },\u000d\u000a\u0009});\u000d\u000a\u000d\u000aEach entry in ```map``` utilises the ```path``` and ```respository``` options to determine the full path and URL of the items being considered. So, in this case, the first entry would resolve to:\u000d\u000a\u000d\u000a\u0009/svn/projectX/src/folderX\u000d\u000a\u000d\u000aand\u000d\u000a\u000d\u000a\u0009https://my_repos.com/projectX/trunk/SVNFolderX\u000d\u000a\u000d\u000aNote the inclusion of slashes on the option entries. The plugin makes no effort to ensure slashes are correct.\u000d\u000a\u000d\u000a## Release History\u000d\u000a* 2013-03-13 0.1.0 Initial release\u000d\u000a* 2013-03-13 0.1.2 Issue #1 fixed\u000d\u000a* 2013-12-11 0.1.3 Issue #2 fixed\u000d\u000a" -> "# grunt-svn-fetch\u000d\u000a\u000d\u000a> Ensures specified files are checked out or updated from SVN repository.\u000d\u000a\u000d\u000a## Getting Started\u000d\u000aThis plugin requires Grunt `~0.4.0`\u000d\u000a\u000d\u000aIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\u000d\u000a\u000d\u000a\u0009npm install grunt-svn-fetch --save-dev\u000d\u000a\u000d\u000aOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\u000d\u000a\u000d\u000a\u0009grunt.loadNpmTasks('grunt-svn-fetch');\u000d\u000a\u000d\u000a## The \"svn_fetch\" task\u000d\u000a\u000d\u000a### Overview\u000d\u000aIn your project's Gruntfile, add a section named `svn_fetch` to the data object passed into `grunt.initConfig()`.\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009// Task-specific options go here.\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009your_target: {\u000d\u000a\u0009\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009\u0009// Target-specific settings and/or options go here.\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009},\u000d\u000a\u0009})\u000d\u000a\u000d\u000aThe task works by checking for the presence of the ```.svn``` folder under each of the target folders. If present, an update is performed, otherwise a checkout is done.\u000d\u000a\u000d\u000a### Options\u000d\u000a\u000d\u000a#### options.bin\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `'svn'`\u000d\u000a\u000d\u000aSpecifies the location of the SVN binary.\u000d\u000a\u000d\u000a#### options.execOptions\u000d\u000aType: 'Object'\u000d\u000a\u000d\u000aDefault value: `{}`\u000d\u000a\u000d\u000aSpecifies any options to pass to the `exec` command when executing the svn cli statements. For example, it may be necessary to increase the default `maxBuffer` for larger repositories.\u000d\u000a\u000d\u000aDefault value: `{}`\u000d\u000a\u000d\u000aSpecifies any options to pass to the `svn` command. For example you can specify your credentials as follows:\u000d\u000a\u000d\u000a```js\u000d\u000asvnOptions: {\u000d\u000a\u0009username: 'paul',\u000d\u000a\u0009password: 'paulpasswd'\u000d\u000a}\u000d\u000a```\u000d\u000a\u000d\u000a#### options.repository\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe URL of the SVN repository.\u000d\u000a\u000d\u000a#### options.path\u000d\u000aType: `String`\u000d\u000a\u000d\u000aDefault value: `''`\u000d\u000a\u000d\u000aThe base element of the path to where checked out or updated files are placed.\u000d\u000a\u000d\u000a### Usage Examples\u000d\u000a\u000d\u000a\u0009grunt.initConfig({\u000d\u000a\u0009\u0009svn_fetch: {\u000d\u000a\u0009\u0009\u0009options: {\u000d\u000a\u0009\u0009\u0009\u0009'repository':\u0009'https://my_repos.com/projectX/trunk/',\u000d\u000a\u0009\u0009\u0009\u0009'path': \u0009\u0009'/svn/projectX/src/'\u000d\u000a\u0009\u0009\u0009},\u000d\u000a\u0009\u0009\u0009projectX: {\u000d\u000a\u0009    \u0009\u0009map: {\u000d\u000a\u0009\u0009\u0009    \u0009'folderX': 'SVNFolderX',\u000d\u000a\u0009\u0009\u0009\u0009\u0009'folderY': 'SVNFolderY'\u000d\u000a\u0009\u0009\u0009\u0009}\u000d\u000a\u0009\u0009\u0009}\u000d\u000a\u0009    },\u000d\u000a\u0009});\u000d\u000a\u000d\u000aEach entry in ```map``` utilises the ```path``` and ```respository``` options to determine the full path and URL of the items being considered. So, in this case, the first entry would resolve to:\u000d\u000a\u000d\u000a\u0009/svn/projectX/src/folderX\u000d\u000a\u000d\u000aand\u000d\u000a\u000d\u000a\u0009https://my_repos.com/projectX/trunk/SVNFolderX\u000d\u000a\u000d\u000aNote the inclusion of slashes on the option entries. The plugin makes no effort to ensure slashes are correct.\u000d\u000a\u000d\u000a## Release History\u000d\u000a* 2013-03-13 0.1.0 Initial release\u000d\u000a* 2013-03-13 0.1.2 Issue #1 fixed\u000d\u000a* 2013-12-11 0.1.3 Issue #2 fixed\u000d\u000a"
54 error Changed: time.modified "2013-12-11T23:05:43.767Z" -> "2014-12-08T11:07:17.136Z"
54 error Added: time.0.2.0
54 error Added: _attachments: grunt-svn-fetch
55 error If you need help, you may report this error at:
55 error     <http://github.com/npm/npm/issues>
56 verbose exit [ 1, true ]
